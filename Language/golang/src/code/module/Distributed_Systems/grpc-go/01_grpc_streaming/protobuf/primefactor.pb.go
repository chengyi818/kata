// Code generated by protoc-gen-go. DO NOT EDIT.
// source: primefactor.proto

package protobuf

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Num                  int64    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_314b7be070f1cb65, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

type Response struct {
	Result               int64    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_314b7be070f1cb65, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetResult() int64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "primefactor.Request")
	proto.RegisterType((*Response)(nil), "primefactor.Response")
}

func init() { proto.RegisterFile("primefactor.proto", fileDescriptor_314b7be070f1cb65) }

var fileDescriptor_314b7be070f1cb65 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x28, 0xca, 0xcc,
	0x4d, 0x4d, 0x4b, 0x4c, 0x2e, 0xc9, 0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x46,
	0x12, 0x52, 0x92, 0xe6, 0x62, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe0, 0x62,
	0xce, 0x2b, 0xcd, 0x95, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x02, 0x31, 0x95, 0x94, 0xb8, 0x38,
	0x82, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xc4, 0xb8, 0xd8, 0x8a, 0x52, 0x8b, 0x4b,
	0x73, 0x4a, 0xa0, 0x0a, 0xa0, 0x3c, 0x23, 0x1f, 0x2e, 0x76, 0x37, 0xb0, 0x51, 0xc5, 0x42, 0x8e,
	0x5c, 0x3c, 0x01, 0x20, 0xa3, 0x61, 0x7c, 0x11, 0x3d, 0x64, 0xcb, 0xa1, 0xd6, 0x48, 0x89, 0xa2,
	0x89, 0x42, 0xcc, 0x57, 0x62, 0xd0, 0x60, 0x34, 0x60, 0x74, 0xe2, 0x8a, 0xe2, 0x00, 0x3b, 0x32,
	0xa9, 0x34, 0x2d, 0x89, 0x0d, 0xcc, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x04, 0x53, 0x41,
	0x12, 0xc3, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FactorsClient is the client API for Factors service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FactorsClient interface {
	PrimeFactors(ctx context.Context, opts ...grpc.CallOption) (Factors_PrimeFactorsClient, error)
}

type factorsClient struct {
	cc *grpc.ClientConn
}

func NewFactorsClient(cc *grpc.ClientConn) FactorsClient {
	return &factorsClient{cc}
}

func (c *factorsClient) PrimeFactors(ctx context.Context, opts ...grpc.CallOption) (Factors_PrimeFactorsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Factors_serviceDesc.Streams[0], "/primefactor.Factors/PrimeFactors", opts...)
	if err != nil {
		return nil, err
	}
	x := &factorsPrimeFactorsClient{stream}
	return x, nil
}

type Factors_PrimeFactorsClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type factorsPrimeFactorsClient struct {
	grpc.ClientStream
}

func (x *factorsPrimeFactorsClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *factorsPrimeFactorsClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FactorsServer is the server API for Factors service.
type FactorsServer interface {
	PrimeFactors(Factors_PrimeFactorsServer) error
}

// UnimplementedFactorsServer can be embedded to have forward compatible implementations.
type UnimplementedFactorsServer struct {
}

func (*UnimplementedFactorsServer) PrimeFactors(srv Factors_PrimeFactorsServer) error {
	return status.Errorf(codes.Unimplemented, "method PrimeFactors not implemented")
}

func RegisterFactorsServer(s *grpc.Server, srv FactorsServer) {
	s.RegisterService(&_Factors_serviceDesc, srv)
}

func _Factors_PrimeFactors_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FactorsServer).PrimeFactors(&factorsPrimeFactorsServer{stream})
}

type Factors_PrimeFactorsServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type factorsPrimeFactorsServer struct {
	grpc.ServerStream
}

func (x *factorsPrimeFactorsServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *factorsPrimeFactorsServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Factors_serviceDesc = grpc.ServiceDesc{
	ServiceName: "primefactor.Factors",
	HandlerType: (*FactorsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeFactors",
			Handler:       _Factors_PrimeFactors_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "primefactor.proto",
}
