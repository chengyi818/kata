add_t
KEYWORD : typedef
KEYWORD : void
PUNCTUATION : (
PUNCTUATION : *
IDENTIFIER : add_t
PUNCTUATION : )
PUNCTUATION : (
KEYWORD : int
PUNCTUATION : ,
KEYWORD : int
PUNCTUATION : )
main()
KEYWORD : int
IDENTIFIER : main
PUNCTUATION : (
KEYWORD : void
PUNCTUATION : )
PUNCTUATION : {
KEYWORD : void
PUNCTUATION : *
IDENTIFIER : handle
PUNCTUATION : ;
IDENTIFIER : add_t
IDENTIFIER : add
PUNCTUATION : ;
KEYWORD : char
PUNCTUATION : *
IDENTIFIER : error
PUNCTUATION : ;
IDENTIFIER : handle
PUNCTUATION : =
IDENTIFIER : dlopen
PUNCTUATION : (
LITERAL : "./func.so"
PUNCTUATION : ,
IDENTIFIER : RTLD_LAZY
PUNCTUATION : )
PUNCTUATION : ;
KEYWORD : if
PUNCTUATION : (
PUNCTUATION : !
IDENTIFIER : handle
PUNCTUATION : )
PUNCTUATION : {
IDENTIFIER : printf
PUNCTUATION : (
LITERAL : "%s\n"
PUNCTUATION : ,
IDENTIFIER : dlerror
PUNCTUATION : (
PUNCTUATION : )
PUNCTUATION : )
PUNCTUATION : ;
IDENTIFIER : exit
PUNCTUATION : (
LITERAL : 1
PUNCTUATION : )
PUNCTUATION : ;
PUNCTUATION : }
IDENTIFIER : add
PUNCTUATION : =
PUNCTUATION : (
IDENTIFIER : add_t
PUNCTUATION : )
IDENTIFIER : dlsym
PUNCTUATION : (
IDENTIFIER : handle
PUNCTUATION : ,
LITERAL : "add"
PUNCTUATION : )
PUNCTUATION : ;
KEYWORD : if
PUNCTUATION : (
PUNCTUATION : (
IDENTIFIER : error
PUNCTUATION : =
IDENTIFIER : dlerror
PUNCTUATION : (
PUNCTUATION : )
PUNCTUATION : )
PUNCTUATION : !=
IDENTIFIER : NULL
PUNCTUATION : )
PUNCTUATION : {
IDENTIFIER : printf
PUNCTUATION : (
LITERAL : "%s\n"
PUNCTUATION : ,
IDENTIFIER : error
PUNCTUATION : )
PUNCTUATION : ;
IDENTIFIER : exit
PUNCTUATION : (
LITERAL : 1
PUNCTUATION : )
PUNCTUATION : ;
PUNCTUATION : }
IDENTIFIER : add
PUNCTUATION : (
LITERAL : 2
PUNCTUATION : ,
LITERAL : 3
PUNCTUATION : )
PUNCTUATION : ;
KEYWORD : return
LITERAL : 0
PUNCTUATION : ;
PUNCTUATION : }
